# SPDX-License-Identifier: GPL-2.0
################################################################################
#
# Driver for Solarflare and Xilinx network controllers and boards
# Copyright 2019 Solarflare Communications Inc.
# Copyright 2019-2020 Xilinx Inc.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 as published
# by the Free Software Foundation, incorporated herein by reference.
#
################################################################################
#
# Note: you MUST set TOPDIR before including this file.

# dkms may set ${arch} to aarch64
ifeq ($(ARCH),aarch64)
ARCH:=arm64
endif

ifdef KERNELRELEASE
# kbuild part of makefile
#
ifndef EFX_UPSTREAM
# Compiler flags
ccflags-y += -Wall -Wno-deprecated-declarations -DEFX_USE_KCOMPAT=1
ccflags-y += -I$(TOPDIR)/include
ifdef EFX_FOR_UPSTREAM
ccflags-y += -include config.h
else
ccflags-y += -DEFX_NOT_UPSTREAM=1
endif
ifdef EFX_NOT_EXPORTED
ccflags-y += -DEFX_NOT_EXPORTED
endif # EFX_NOT_EXPORTED
ifdef EFX_C_MODEL
ccflags-y += -DEFX_C_MODEL
endif
ifndef NOWERROR
ccflags-y += -Werror
endif # NOWERROR
# Debugging-enabled builds
ifndef NDEBUG
ccflags-y += -DDEBUG -g
UBSAN_SANITIZE := y
endif

endif # !EFX_UPSTREAM

# Define filechk if necessary
ifndef filechk
define filechk
	$(Q)set -e;				\
	$(if Q,echo '  CHK     $@';)		\
	mkdir -p $(dir $@);			\
	$(filechk_$(1)) < $< > $@.tmp;		\
	if [ -r $@ ] && cmp -s $@ $@.tmp; then	\
		rm -f $@.tmp;			\
	else					\
		$(if Q,echo '  UPD     $@';)	\
		mv -f $@.tmp $@;		\
	fi
endef
endif

ifndef EFX_UPSTREAM
# autocompat.h depends on the kernel compiled against.
# However, there is nothing stopping the user compiling on multiple
# machines in the same directory. The .kpath target provides a simple
# dependency check for this.
#
# Module(s).symvers also depends on the kernel compiled against, but
# can simply be deleted here.  However mmake does some more complicated
# management of Module.symvers and does not allow changing the kernel
# path, so don't touch it when invoked from an mmake tree.
$(obj)/.kpath: FORCE
	@if ! [ -f $@ ] || [ $$(cat $@) != $(objtree) ]; then		\
		echo $(objtree) >$@;					\
		$(if $(MMAKE_IN_KBUILD),,rm -f $(obj)/*.symvers;)	\
	fi

ifdef srctree
define filechk_autocompat.h
	$(src)/kernel_compat.sh -k $(srctree) -o "$(realpath $(objtree))" $(if $(filter 1,$(V)),-v,-q)
endef
else
ifdef KBUILD_SRC
define filechk_autocompat.h
	$(src)/kernel_compat.sh -k $(KBUILD_SRC) -o "$(CURDIR)" $(if $(filter 1,$(V)),-v,-q)
endef
else
define filechk_autocompat.h
	$(src)/kernel_compat.sh -k "$(CURDIR)" -o "$(CURDIR)" $(if $(filter 1,$(V)),-v,-q)
endef
endif
endif

$(obj)/autocompat.h: $(obj)/.kpath $(src)/kernel_compat.sh $(TOPDIR)/scripts/kernel_compat_funcs.sh FORCE
	+$(call filechk,autocompat.h)

endif # !EFX_UPSTREAM
else
# normal makefile
#
ifndef EFX_UPSTREAM
# Get kernel version and source directory.  Either may be specified and
# we work out the other automatically.  If neither is specified then we
# assume the current kernel version.
# Compat: KDIR used to be called KPATH
ifdef KPATH
KDIR ?= $(KPATH)
ifneq ($(MAKECMDGOALS),export-srpm)
ifndef KVER
KVER := $(shell sed -r 's/^\#define UTS_RELEASE "(.*)"/\1/; t; d' $(KDIR)/include/generated/utsrelease.h $(KDIR)/include/linux/utsrelease.h $(KDIR)/include/linux/version.h 2>/dev/null)
ifeq ($(KVER),)
$(error Failed to find kernel version for $(KDIR))
endif
endif # !KVER
endif # !export-srpm
endif # KPATH

ifndef KVER
KVER := $(shell uname -r)
endif
KDIR ?= /lib/modules/$(KVER)/build
export KDIR KVER

# Special build flags
ifeq ($(origin CC),default)
ifneq ($(CROSS_COMPILE),)
CC=$(CROSS_COMPILE)gcc
endif
else
ifneq ($(CC),)
EXTRA_MAKEFLAGS += CC="$(CC)"
endif
endif # default CC
ifneq ($(C),)
EXTRA_MAKEFLAGS += C="$(C)"
endif
ifdef KMP_RELEASE
EXTRA_MAKEFLAGS += KMP_RELEASE=1
endif
export EXTRA_MAKEFLAGS

# Export Support
EXPORT_CMD = $(TOPDIR)/scripts/export.sh
export EXPORT_CMD

# Install support
ifeq ($(INSTALL_MOD_DIR),)
INSTALL_MOD_DIR := updates
endif

endif # !EFX_UPSTREAM

endif
